---
import { user as currentUser } from "../data";
import type { ActivityType } from "../types";
import ProfilePic from "./ProfilePic.astro";

interface Props {
    activity: ActivityType;
    user?: any;
    view?: boolean;
    column?: boolean;
}

const { activity, user = currentUser, view = true, column = false } = Astro.props;

let time = parseFloat(activity["Moving Time"]) / 60;

// time in minutes
let timeDisplay = `${Math.floor(time)} min`;

if (time > 60) {
    let minutes = Math.floor(time % 60);
    time = Math.floor(time / 60);
    timeDisplay = `${time} hr ${minutes} min`;
}

let distance = parseFloat(activity["Distance"]);
let unitDistance = "m";
let distanceString = distance.toString();
if (distance > 1000) {
    distanceString = (distance / 1000).toFixed(2);
    unitDistance = "km";
} else {
    distanceString = Math.floor(distance).toString();
}
---

<article class="activity" class:list={[{"activity-column": column}]}>
    <header>
        <ProfilePic tiny={view} column={!view} />
        <p>
            {activity["Activity Date"]}
            {view && (
                <span>â€¢</span>
                <a href={`./activity/${activity["Activity ID"]}/`}>View Activity</a>
            )}
        </p>
    </header>
    <h3>{activity["Activity Name"]}</h3>
    <p>{activity["Activity Description"]}</p>
    <div class="activity-stats">
        <span>Distance: {distanceString} {unitDistance}</span>
        <span>Elev Gain: {Math.floor(parseFloat(activity["Elevation Gain"]))}m</span>
        <span>Time: {timeDisplay}</span>
    </div>
</article>

<style>
    .activity {
        border-radius: 8px;
        padding: 20px;
        background-color: white;
        border-bottom: 1px solid #e5e5e5;
        padding-bottom: 20px;
        margin-bottom: 20px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .activity header {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .activity-stats {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }
    .activity-column .activity-stats {
        flex-direction: column;
    }
    .activity-column header {
        flex-direction: column;
    }

</style>
